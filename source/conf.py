# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
import sys
import os

from datetime import date



# -- Project information -----------------------------------------------------

project = 'Unipi HPC Resources Documentation'
copyright = '2020, Università di Pisa'
author = 'Università di Pisa'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
#extensions = ['rst2pdf.pdfbuilder']
#pdf_documents = [('index', u'Unipi HPC Resources Documentation', u'Unipi HPC Resources Documentation', u'Fabio Pratelli, Guido Scatena'),]

extensions = [
#    'sphinx_gallery.gen_gallery',
#    'sphinx_issues',
#    'sphinx.ext.autodoc',
#    'sphinx.ext.autosummary',
#    'sphinx.ext.doctest',
#    'sphinx.ext.viewcode',
#    'sphinxarg.ext',
#    'numpydoc',
#   'sphinx.ext.todo',
#   'sphinx.ext.coverage',
#   'sphinx.ext.ifconfig',
#    'sphinx.ext.autosectionlabel',
]

autosummary_generate = True



autodoc_default_flags = ['members', 'inherited-members']
#numpydoc_class_members_toctree = False

# generate autosummary even if no references
autosummary_generate = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'
# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

sphinx_gallery_conf = {
    'backreferences_dir': 'gen_modules/backreferences',
    # path to your examples scripts
    #'examples_dirs': '../examples',
    # path where to save gallery generated examples
    'gallery_dirs': 'gallery',
    'filename_pattern': r'/\w+',
    #'doc_module': ('wordcloud',),
    #'reference_url': {
        # The module you locally document uses None
    #    'wordcloud': None,
    #}
}

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'
#html_theme = 'classic'
html_theme = "sphinx_rtd_theme"

html_logo = "images/marchio_unipi_black288.gif"

html_theme_options = {
    'canonical_url': '',
    'analytics_id': 'UA-156261244-1',  #  Provided by Google in your dashboard
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'bottom',
    'style_external_links': False,
    #'vcs_pageview_mode': '',
    'style_nav_header_background': 'white',
    # Toc options
    'collapse_navigation': True,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False,
    #'last_updated' :  '%m/%d/%Y'
}

#html_last_updated_fmt = '%m/%d/%Y'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static', 'other']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}



# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'UnipiHPCdocumentationdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'UnipiHPCdocumentation.tex', 'Unipi HPC documentation Documentation',
     'UnipiHPC (Unipi HPC)', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'UnipiHPCdocumentation', 'Unipi HPC documentation Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'UnipiHPCdocumentation', 'Unipi HPC documentation Documentation',
     author, 'UnipiHPCdocumentation', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

from datetime import date


def change_today_fmt(app, docname, source):
    if docname == 'foo':
        app.config.today_fmt = '%B %d, %Y'
    else:
        app.config.today_fmt = '%B/%d/%Y'


def change_last_updated(app, pagename, templatename, context, docname):
    if pagename == 'foo':
        context['last_updated'] = date.today()#.strftime('%B %d, %Y')
    else:
        context['last_updated'] = date.today()#.strftime('%B/%d/%Y')


def setup(app):
    app.connect('source-read', change_today_fmt)
    app.connect('html-page-context', change_last_updated)

html_static_path = ['_static']

html_context = {
    'css_files': [
        '_static/theme_overrides.css',  # override wide tables in RTD theme
        ],
     }